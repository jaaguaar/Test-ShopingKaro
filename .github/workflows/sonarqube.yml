name: SonarQube

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      # Set up Docker Buildx for building the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image without pushing
      - name: Build Docker Image
        run: |
          docker build -t shopingkaro:latest .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.57.0
          trivy --version

      # - name: Run Trivy Vulnerability Scanner
      #   run: |
      #     trivy image \
      #       --scanners vuln \
      #       --ignore-unfixed \
      #       --vuln-type os,library \
      #       --severity CRITICAL,HIGH \
      #       --format template \
      #       --template "@${{ github.workspace }}/html.tpl" \
      #       --output trivy-report.html \
      #       docker.io/library/shopingkaro:latest
      #   env:
      #     TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          
      - name: Run Trivy Vulnerability Scanner
        run: |
          trivy image \
            --scanners vuln \
            --ignore-unfixed \
            --vuln-type os,library \
            --severity CRITICAL,HIGH \
            --format sarif \
            --output trivy-report.sarif \
            docker.io/library/shopingkaro:latest
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2

      # - name: Upload Trivy Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: trivy-report
      #     path: trivy-report.html
          
      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
